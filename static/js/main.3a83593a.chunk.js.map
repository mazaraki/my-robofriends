{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","src","alt","Cardlist","robots","cardArray","map","robot","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","console","log","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","res","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAeeA,G,MAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GACxB,OACI,yBAAKC,UAAU,uDACX,yBAAKC,IAAG,8BAA0BF,EAA1B,YAAyCG,IAAI,WACrD,6BACI,4BAAML,GACN,2BAAKC,OCYNK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAOC,GACjC,OACI,kBAAC,EAAD,CACIC,IAAML,EAAOI,GAAGT,GAChBA,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,WAI7B,OACI,6BACGO,ICFIK,EAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,yBAAKX,UAAU,OACX,2BAAOA,UAAU,mCACbY,KAAK,SACLC,YAAY,gBACZC,SAAWH,MCEZI,EARA,SAACC,GACZ,OACI,yBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAC/DJ,EAAMK,WCkBLC,E,kDApBX,WAAYN,GAAO,IAAD,6BACd,cAAMA,GACNO,QAAQC,IAAIR,GACZ,EAAKS,MAAQ,CACTC,UAAU,GAJA,E,8DAQAC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAGG,KAAKJ,MAAMC,SACH,wCAEJG,KAAKb,MAAMK,a,GAjBEU,aC6CZC,G,wDAvCZ,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACTrB,OAAQ,GACR+B,YAAa,IAJR,E,gEAQO,IAAD,OACfG,MAAM,8CACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAE1B,OAAQsC,S,+BAOtC,IAAD,EAC4Bb,KAAKJ,MAA7BrB,EADJ,EACIA,OAAQ+B,EADZ,EACYA,YACVQ,EAAiBvC,EAAOwC,QAAO,SAAArC,GAAK,OACtCA,EAAMV,KAAKgD,cAAcC,SAASX,EAAYU,kBAElD,OAASzC,EAAO2C,OAGZ,yBAAK/C,UAAU,MACX,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWW,aAAekB,KAAKI,iBAC/B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAU7B,OAASuC,OAPjC,8C,GAzBQZ,cCElBiB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,W","file":"static/js/main.3a83593a.chunk.js","sourcesContent":["import React from\"react\";\r\nimport './Card.css'\r\n\r\nconst Card = ({name, email, id})=>{\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n            <img src={ `http://robohash.org/${id}?200x200` } alt='robots' />\r\n            <div>\r\n                <h2>{ name }</h2>\r\n                <p>{ email }</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Cardlist = ({ robots }) => {\r\n    const cardArray = robots.map((robot, i) => {\r\n        return (\r\n            <Card \r\n                key={ robots[i].id } \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n             />\r\n        );\r\n    });\r\n    return (\r\n        <div>\r\n          {cardArray}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cardlist;","import React from 'react'; \r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots' \r\n                onChange={ searchChange }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => { \r\n    return ( \r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n            { props.children }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        console.log(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>OOpss!!!</h1>\r\n        } \r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(res => res.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    render(){\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => \r\n            robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        );\r\n        return (!robots.length) \r\n        ? <h1>Loading...</h1>\r\n        :(\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={ this.onSearchChange } />\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <Cardlist robots={ filteredRobots } />\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n };\r\n\r\n export default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons';\r\n\r\nimport App from './containers/App'; \r\n\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <App />\r\n   </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}